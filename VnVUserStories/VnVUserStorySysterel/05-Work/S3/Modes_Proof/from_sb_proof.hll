Declarations:
'Level_And_Mode_Types_Pkg::T_Mode' next_mode;

Definitions:
next_mode :=
	  if Condition1 then 'Level_And_Mode_Types_Pkg::IS'
	  elif Condition29 then 'Level_And_Mode_Types_Pkg::NP'
	  elif Condition13 then 'Level_And_Mode_Types_Pkg::SF'
	  elif ConditionSB2TR then 'Level_And_Mode_Types_Pkg::TR'
	  elif Condition14 then 'Level_And_Mode_Types_Pkg::SL'
	  elif Condition46 then 'Level_And_Mode_Types_Pkg::NL'
	  elif Condition5 # Condition6 # Condition50 then 'Level_And_Mode_Types_Pkg::SH'
	  elif Condition10 then 'Level_And_Mode_Types_Pkg::FS'
	  elif Condition70 then 'Level_And_Mode_Types_Pkg::LS'
	  elif Condition8 # Condition37 then 'Level_And_Mode_Types_Pkg::SR'
	  elif Condition15 then 'Level_And_Mode_Types_Pkg::OS'
	  elif Condition60 then 'Level_And_Mode_Types_Pkg::UN'
	  elif Condition58 then 'Level_And_Mode_Types_Pkg::SN'
	  else previousMode_Loc;



Proof Obligations:
(next_mode = 'SwitchModes_#1/PriorityManagement::From_SB_##1/>FromSB_To_NewMode');
