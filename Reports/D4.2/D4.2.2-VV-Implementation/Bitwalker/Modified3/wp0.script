(* Generated by Frama-C WP *)

Goal typed_ref_Bitwalker_IncrementalWalker_Peek_Next_post.
Hint Bitwalker_IncrementalWalker_Peek_Next,default,property.
Proof.
  intros.
  subst x_4.
Qed.

Goal typed_ref_Bitwalker_IncrementalWalker_Poke_Next_call_Bitwalker_Poke____3.
Hint Bitwalker_IncrementalWalker_Poke_Next,precond-Bitwalker_Poke.
Proof.
(* auto with zarith. *)
Qed.

Goal typed_ref_Bitwalker_Peek_assert.
Hint Bitwalker_Peek,property.
Proof.
  intros.
  unfold x_5.
  (* admit. *)
Qed.

Goal typed_ref_Bitwalker_Peek_assert_2.
Hint Bitwalker_Peek,property.
Proof.
  intros.
  subst x_3 x_4 x_5.
  unfold land.
Qed.

Goal typed_ref_Bitwalker_Peek_loop_inv_2_preserved.
Hint Bitwalker_Peek,preserved.
Proof.
  intros.
  subst x_3 x_9.
  unfold is_uint64 in H38.
  apply and_comm.
  split.

  + auto with zarith.

  + subst x_0.
    assert(greater_equal: (0 <= i_0)%Z) by assumption.
    apply Zle_lt_or_eq in greater_equal.
    destruct greater_equal as [greater|equal].
    - rewrite <- Q_Pow2Step.
      * auto with zarith.
        assert((0 <= x_7 <= 1)%Z) by admit.
        auto with zarith.
      * assumption.
    - rewrite <- equal in *.
      rewrite <- Q_Pow2Empty in *.
      * assert (retval_0 = 0)%Z by auto with zarith.
        rewrite H39.
        admit.
      * auto with zarith.
      * admit.
      * auto with zarith.
      
Qed.

Goal typed_ref_Bitwalker_Peek_post_no_overflow_on_result.
Hint Bitwalker_Peek,default,no_overflow_on_result,property.
Proof.
(* auto with zarith. *)
Qed.

Goal typed_ref_lemma_power_lemmma.
Hint power_lemmma,property.
Proof.
(* auto with zarith. *)
Qed.


